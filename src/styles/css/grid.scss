.#{$materialize-prefix}-container,
.#{$materialize-prefix}-container-fluid {
  margin-left: auto;
  margin-right: auto;
  padding-left: $materialize-grid-gap-size;
  padding-right: $materialize-grid-gap-size;
  width: 100%;
}

.#{$materialize-prefix}-row {
  display: grid;
  grid-auto-rows: min-content;
  grid-template-columns: repeat($materialize-grid-columns, 1fr);
  margin-left: -$materialize-grid-gap-size;
  margin-right: -$materialize-grid-gap-size;
}

.#{$materialize-prefix}-row-gap {
  grid-gap: $materialize-grid-gap-size;
}

[class^='#{$materialize-prefix}-col-'] {
  padding: $materialize-grid-gap-size;
}

@mixin generate-container-rules($materialize-breakpoints) {
  @each $key, $value in $materialize-breakpoints {
    @media (min-width: map-get($value,
    'breakpoint')) {
      .#{$materialize-prefix}-container {
        max-width: map-get($value,
        'container-width');
      }
    }
  }
}

@mixin generate-hidden-classes($materialize-media-queries) {
  @each $key, $value in $materialize-media-queries {
    @if map-get($value, 'max') {
      @media (min-width: map-get($value,
      'min')) and (max-width: map-get($value,
      'max')) {
        .#{$materialize-prefix}-hidden-#{$key} {
          display: none;
        }
      }
    }
    @else {
      @media (min-width: map-get($value,
      'min')) {
        .#{$materialize-prefix}-hidden-#{$key} {
          display: none;
        }
      }
    }
  }
}

@mixin generate-columns($columns, $materialize-breakpoints) {
  @for $i from 1 through $columns {
    .#{$materialize-prefix}-col-#{$i} {
      grid-column: span $i;
    }
  }

  @each $key, $value in $materialize-breakpoints {
    @media (min-width: map-get($value,
    'breakpoint')) {
      @for $i from 1 through $columns {
        .#{$materialize-prefix}-col-#{$key}-#{$i} {
          grid-column: span $i;
        }
      }
    }
  }
}

@include generate-columns($materialize-grid-columns, $materialize-media-breakpoints);
@include generate-hidden-classes($materialize-media-breakpoints);
@include generate-container-rules($materialize-media-breakpoints);
